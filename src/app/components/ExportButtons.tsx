import { memo, useCallback } from 'react';

interface ExportButtonsProps {
  exportToExcel: () => void;
  showChart: boolean;
  setShowChart: (show: boolean) => void;
  isExporting?: boolean;
}

const ExportButtons = memo(function ExportButtons({ 
  exportToExcel, 
  showChart, 
  setShowChart,
  isExporting = false 
}: ExportButtonsProps) {
  const handleExport = useCallback(async () => {
    try {
      await exportToExcel();
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –µ–∫—Å–ø–æ—Ä—Ç—ñ:', error);
      alert('–ù–µ –≤–¥–∞–ª–æ—Å—è –µ–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
    }
  }, [exportToExcel]);

  const handleChartToggle = useCallback(() => {
    setShowChart(!showChart);
  }, [showChart, setShowChart]);

  return (
    <div className="flex flex-col sm:flex-row gap-4 sm:gap-2">
      <button
        onClick={handleExport}
        className="bg-green-500 text-white px-4 py-2 sm:px-3 sm:py-1 rounded hover:bg-green-600 sm:text-sm md:text-base disabled:opacity-50 disabled:cursor-not-allowed"
        aria-label="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤ Excel"
        type="button"
        disabled={isExporting}
      >
        {isExporting ? '‚è≥ –ï–∫—Å–ø–æ—Ä—Ç...' : '‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤ Excel'}
      </button>
      <button
        onClick={handleChartToggle}
        className="bg-blue-500 text-white px-4 py-2 sm:px-3 sm:py-1 rounded hover:bg-blue-600 sm:text-sm md:text-base"
        aria-label={showChart ? "–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫" : "–ü–æ–∫–∞–∑–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫"}
        type="button"
      >
        üìä {showChart ? '–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫' : '–ü–æ–∫–∞–∑–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫'}
      </button>
    </div>
  );
});

export default ExportButtons;